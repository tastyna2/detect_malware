import numpy as np
import os
import json
import pickle
from collections import defaultdict
from importance import permutation_importance


files = ['ffridataset2020_malware.jsonl', 'ffridataset2020_cleanware.jsonl']

if os.path.isfile('./rich_count.txt'):
    with open('rich_count.txt', 'rb') as fp:
        cnt_list = pickle.load(fp)
else:
    rich_count = defaultdict(int)
    for fname in files:
        with open(fname) as fp:
            for line in fp:
                data = json.loads(line)
                lief = data['lief']
                rich = lief.get('rich_header')
                if rich is not None:
                    for entry in rich['entries']:
                        rich_count[(entry['build_id'], entry['id'])] += 1

    rich_count = dict(rich_count)
    cnt_list = sorted(rich_count.items(), key=lambda x:x[1], reverse=True)
    with open('rich_count.txt', 'wb') as fp:
        pickle.dump(cnt_list, fp)

rich_entry = []
idx = 0
for obrich, count in cnt_list:
    if count < 1000:
        print(idx)
        break
    rich_entry.append(obrich)
    idx += 1
print(rich_entry)

if os.path.isfile('./build_count.txt'):
    with open('build_count.txt', 'rb') as fp:
        build_list = pickle.load(fp)
else:
    build_count = defaultdict(int)
    for fname in files:
        with open(fname) as fp:
            for line in fp:
                data = json.loads(line)
                lief = data['lief']
                rich = lief.get('rich_header')
                if rich is not None:
                    build_id = set()
                    for entry in rich['entries']:
                        build_id.add(entry['build_id'])
                    for i in build_id:
                        build_count[i] += 1

    build_count = dict(build_count)
    build_list = sorted(build_count.items(), key=lambda x:x[1], reverse=True)
    with open('build_count.txt', 'wb') as fp:
        pickle.dump(build_list, fp)


tools = []
idx = 0
for bldid, count in build_list:
    if count < 1000:
        print(idx)
        break
    tools.append(bldid)
    idx += 1
print(tools)

