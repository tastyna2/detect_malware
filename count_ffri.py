import json
import numpy as np
import pandas as pd
from collections import Counter
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import confusion_matrix

def load_str_info(*args):
    str_df = pd.DataFrame()
    l_array = np.empty(0)

    for fname, element in args:
	j = 1
	count = 0

	with open(fname) as f:
	    for line in f:
		if j > 100:
		    break
		data = json.loads(line)
		line_dict = Counter(data['strings'])
		str_df = str_df.append(line_dict, ignore_index=True)
		j += 1
		count += 1

	l_array = np.hstack([l_array, np.full(count, element)])

    return str_df.fillna(0), l_array

df, Y = load_str_info(('ffridataset2020_malware.jsonl', 1), ('ffridataset2020_cleanware.jsonl', 0))

df.columns = list(range(len(df.columns)))
print(df)
X = df.to_numpy()
print(Y)
print(X)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=0)
model = SVC(gamma='scale')
model.fit(X_train, Y_train)
Y_pred = model.predict(X_test)

print(Y_test)
print(Y_pred)

print(confusion_matrix(Y_test, Y_pred))
