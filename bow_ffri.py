import json
import numpy as np
import pandas as pd
from gensim import corpora, models, matutils
from sklearn.model_selection import train_test_split
from sklearn.svm import SVC
from sklearn.metrics import confusion_matrix

def load_str_info(*args):
    str_list = []
    l_array = np.empty(0)

    for fname, element in args:
	j = 1
	count = 0

	with open(fname) as f:
	    for line in f:
		if j > 1000:
		    break
		data = json.loads(line)
		str_list.append(data['strings'])
		j += 1
		count += 1

	l_array = np.hstack([l_array, np.full(count, element)])

    return str_list, l_array

strings, Y = load_str_info(('ffridataset2020_malware.jsonl', 1), ('ffridataset2020_cleanware.jsonl', 0))

dic = corpora.Dictionary(strings)
dic.filter_extremes(no_below = 1, no_above = 0.3)
bow_corpus = [dic.doc2bow(s) for s in strings]
tfidf_model = models.TfidfModel(bow_corpus)
tfidf_corpus = tfidf_model[bow_corpus]
lsi_model = models.LsiModel(tfidf_corpus, id2word = dic, num_topics = 300)
lsi_corpus = lsi_model[tfidf_corpus]

X =  matutils.corpus2dense(lsi_corpus, num_terms = 300).T

print(Y)
print(X)
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.3, random_state=0)
model = SVC(gamma='scale')
model.fit(X_train, Y_train)
Y_pred = model.predict(X_test)

print(Y_test)
print(Y_pred)

print(confusion_matrix(Y_test, Y_pred))
