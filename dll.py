import numpy as np
import os
import json
import pickle
from collections import defaultdict
from importance import permutation_importance

files = ['ffridataset2020_malware.jsonl', 'ffridataset2020_cleanware.jsonl']

if os.path.isfile('./dll_count.txt'):
    with open('dll_count.txt', 'rb') as fp:
        cnt_list = pickle.load(fp)
else:
    dll_count = defaultdict(int)
    inno = 0
    borl = 0
    for fname in files:
        with open(fname) as fp:
            for line in fp:
                data = json.loads(line)
                lief = data['lief']
                imp = lief.get('imports')
                if imp is not None:
                    for dll in imp:
                        dll_count[dll['name'].lower()] += 1
                for k in data['trid'].keys():
                    if '(.EXE)InnoSetupinstaller' in k:
                        inno += 1
                    if '(.EXE)DOSBorlandcompiledExecutable(generic)' in k:
                        borl += 1


    dll_count = dict(dll_count)
    cnt_list = sorted(dll_count.items(), key=lambda x:x[1], reverse=True)
    with open('dll_count.txt', 'wb') as fp:
        pickle.dump(cnt_list, fp)
    print(inno)
    print(borl)

print(cnt_list)
usedll = []
idx = 0
for dll, count in cnt_list:
    if count < 1000:
        print(idx)
        break
    usedll.append(dll)
    idx += 1
print(usedll)
